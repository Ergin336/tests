import numpy as np
import tensorflow as tf

model = tf.keras.models.load_model('palwatch_modeltest.hdf5')
test_record = np.array([[-0.83258367, -9.713276, -0.60693014, -1.0181342, -9.935339, -0.54408234, -1.2228385, -10.142437, -0.5662287, -1.5771804, -10.480618, -0.40282443, -2.1643584, -10.920552, -0.18375498, -2.973, -11.063007, 0.21188685, -3.8881836, -11.08276, 0.6847417, -4.8919525, -10.890625, 1.01574, -12.600683, -7.674015, -1.1791444, -9.214086, -4.5567646, 0.2172738, -9.214086, -4.5567646, 0.2172738, -9.240421, -4.104859, 0.22325931, -9.273342, -3.7295678, 0.24061728, -9.1668, -3.6703112, -0.729633, -9.153033, -3.6056678, -0.7326257, -9.1512375, -3.6122518, -0.74519527, -9.202713, -3.6463692, -0.729633, -9.288904, -3.7361517, -0.7266402, -9.2907, -3.7720647, -0.7302315, -9.2308445, -3.809175, -0.7799112, -9.1350765, -3.7391446, -0.7733272, -9.127894, -3.6703112, -0.82779527, -9.196129, -3.626617, -0.8523358, -9.236232, -3.7128084, -0.8038532, -9.200917, -3.6846764, -0.7152678, -9.148843, -3.650559, -0.6919243, -9.152434, -3.6170402, -0.682946, -9.221867, -3.7014358, -0.7781156, -9.314642, -3.6116533, -0.7338228, -9.3499565, -3.5571852, -0.75477207, -9.238028, -3.620033, -0.6985083, -9.302073, -3.5637693, -0.82360536, -9.25359, -3.7134068, -0.81283146, -9.231443, -3.751714, -0.83737206, -9.231443, -3.7445314, -0.8451532, -9.207501, -3.6134489, -0.7410054, -9.144653, -3.6302083, -0.6775591, -9.106346, -3.6463692, -0.6631939, -9.110536, -3.6780925, -0.6907272, -9.100959, -3.7373488, -0.6733692, -9.100959, -3.7978024, -0.66738373, -9.10455, -3.803788, -0.712275, -9.119514, -3.763685, -0.7469909, -9.112331, -3.7714663, -0.8571242, -9.141661, -3.755904, -0.85293436, -9.156625, -3.7253778, -0.86969376, -9.154829, -3.7565024, -0.90859956, -9.181764, -3.7541082, -0.89543146, -9.141062, -3.7660792, -0.8888474, -9.143456, -3.7666779, -0.85891986, -9.0842, -3.738546, -0.84335756, -9.050082, -3.7588966, -0.84575176, -9.045294, -3.7487214, -0.91458505, -9.009381, -3.7062242, -0.91937345, -9.04709, -3.709217, -0.9528923, -9.081805, -3.719991, -1.0235212, -9.109339, -3.7487214, -0.99419224, -9.102755, -3.739743, -1.0360907, -9.108142, -3.7247794, -1.0193313, -9.160814, -3.6936548, -1.0498575, -9.196129, -3.6595373, -1.0654198, -9.264363, -3.627814, -1.1204864, -9.340978, -3.614646, -1.0941502, -9.355942, -3.5859156, -1.168969, -9.300875, -3.484162, -1.1905168, -9.22426, -3.4237084, -1.2192472, -9.172785, -3.3530796, -1.2294226, -9.094974, -3.3369186, -1.2659341, -9.022549, -3.359065, -1.2120646, -9.019556, -3.3728316, -1.086369, -8.986636, -3.4237084, -1.01574, -8.944737, -3.502717, -0.9552865, -8.933365, -3.558981, -0.93493575, -8.945336, -3.5847185, -0.9415198, -8.978855, -3.6176388, -0.9032126, -9.050681, -3.6541502, -0.9056068, -9.102157, -3.70383, -0.96665895, -9.180567, -3.7469256, -1.003769, -9.237429, -3.8253357, -1.0139444, -9.2787285, -3.8905778, -1.009156]])

keras_prediction = np.argmax(model.predict(test_record), axis=1)
prediction = keras_prediction[0]
print(prediction)

with open("output.txt", "a") as text_file:
  text_file.write(str(prediction))
text_file.close()
